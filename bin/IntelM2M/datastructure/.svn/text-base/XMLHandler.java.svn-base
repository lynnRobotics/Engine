package IntelM2M.datastructure;

import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import org.dom4j.Document;
import org.dom4j.Element;
import org.dom4j.Node;
import org.dom4j.io.SAXReader;





public class XMLHandler {
	
	File xml= new File(".\\_input_data\\new.xml");
	
	public void XMLHandler(){

	}
	
	public ArrayList<String> getActList(){
		 ArrayList<String> actList = new ArrayList<String>();
		try{
  			SAXReader saxReader = new SAXReader();
  			Document document = saxReader.read(xml);
  			List list=document.selectNodes("/metaData/activityList/type");
  			Iterator iter=list.iterator();
  			while(iter.hasNext()){
  				Element actElement=(Element)iter.next();
  				String activity=actElement.attributeValue("id");
  				actList.add(activity);
  			}
		}catch(Exception e){
			e.printStackTrace();
		}
		
		return actList;
	}
	
	public Map<String, ArrayList<String>> getSensorStatus(){
		Map<String, ArrayList<String>> sensorList = new LinkedHashMap<String, ArrayList<String>>();
		
		try{
  			SAXReader saxReader = new SAXReader();
  			Document document = saxReader.read(xml);
  			
  			List list=document.selectNodes("/metaData/sensorList/type");
  			Iterator iter=list.iterator();
  			while(iter.hasNext()){
  				Element typeElement=(Element)iter.next();
  		
  				List list2= typeElement.selectNodes("sensor");
  				Iterator iter2=list2.iterator();
  				while(iter2.hasNext()){
  					Element sensorElement=(Element)iter2.next();  					
  					String sensorName = sensorElement.element("name").getText();
  					String[] sensorStatus = sensorElement.element("status").getText().split(" ");
  					
  					ArrayList<String> tmp = new ArrayList<String>();
 					for(int i = 0; i < sensorStatus.length; i ++)
 						tmp.add(sensorStatus[i]);
 					sensorList.put(sensorName, tmp);
  		          
  				}
  				
  			}
  			
		}catch(Exception e){
			e.printStackTrace();
		}
		
		return sensorList;
	}
	
    public Map<String, SensorNode> getSensorList()
  	{  		 
    	 Map<String, SensorNode> sensorList= new LinkedHashMap<String, SensorNode>();;
  		try
  		{
  			SAXReader saxReader = new SAXReader();
  			Document document = saxReader.read(xml);
  			List list=document.selectNodes("/metaData/sensorList/type");
  			Iterator iter=list.iterator();
  			while(iter.hasNext()){
  				Element typeElement=(Element)iter.next();
  				String type=typeElement.attributeValue("id");
  				List list2= typeElement.selectNodes("sensor");
  				Iterator iter2=list2.iterator();
  				while(iter2.hasNext()){
  					Element sensorElement=(Element)iter2.next();
  					String sensorID=sensorElement.attributeValue("id");
  					
  					String sensorName = sensorElement.element("name").getText();
  					String[] sensorStatus = sensorElement.element("status").getText().split(" ");
  		           	String[] sensorThreshold = sensorElement.element("threshold").getText().split(" ");
  		           	double[] sensorThres = new double[sensorThreshold.length];
  		           	for(int i = 0; i < sensorThreshold.length; i ++)
  		           		sensorThres[i] = Double.parseDouble(sensorThreshold[i]);
  		           	
  		           	SensorNode tmp = new SensorNode(sensorName, type, sensorThres, sensorStatus);
  		          sensorList.put(type + "_" + sensorID, tmp);
  				}
  				
  			}
  		      		 
  		 }
  		 catch (Exception e)
  		 {
  			 e.printStackTrace();
  			 
  		 }
  		return sensorList;
  	}
	

	
	public Map<String, RelationTable>  getActAppList(){
		 Map<String, RelationTable> tableList= new LinkedHashMap<String, RelationTable>();;
		 try {
			SAXReader saxReader = new SAXReader();
			Document document = saxReader.read(xml);
			 List list = document.selectNodes("/metaData/relation/location" );
			 Iterator iter = list.iterator();
		       while(iter.hasNext()){
		              Element roomElement =(Element)iter.next();
		              // get location
		              String roomName=roomElement.attributeValue("id");
		              //get activity 
		               Element actElement = roomElement.element("activity");
		               String []activities= actElement.getText().split(" ");
		               for(String str:activities){		            	   	            	 	            	   
				            //get appliance
			               Element appElement = roomElement.element("appliance");
			               RelationTable table = new RelationTable();	
			               String []appliances= appElement.getText().split(" ");
			               for(String str2:appliances){
			            	 //get appliance and watt
			            	   table.addAppNode(str2, "local");
			            	   /*socket meter*/
			            	   List<Element> eleList=document.selectNodes("/metaData/sensorList/type[@id='socketmeter']/sensor[name='"+str2+"']");			            	
			            	   for(Element meterElement:eleList){
			            		 
			            		   if(meterElement.element("name").getText().equals(str2)){
			            			   String status= meterElement.element("status").getText();
			            			   String ampere=meterElement.element("ampere").getText();
			            			   table.buildAppPower(str2, status, ampere);
			            		   }
			            	   }
			            	   /*Light*/
			            	   eleList=document.selectNodes("/metaData/sensorList/type[@id='light']/sensor[name='"+str2+"']");	
			            	   for(Element lightElement:eleList){
			            		   if(lightElement.element("name").getText().equals(str2)){
			            			   String status= lightElement.element("status").getText();
			            			   String ampere=lightElement.element("ampere").getText();
			            			   table.buildAppPower(str2, status, ampere);
			            		   }
			            	   }
			               }
		            	   //get Intensity
		            	   Node node=document.selectSingleNode("/metaData/activityList/type[@id='"+str+"']/intensity[1]");		            	 
		            	   table.intensity =Double.parseDouble( node.getText());
			               //add table to tableList
		            	   String aa=roomName + "_" + str;
		            	   tableList.put(roomName + "_" + str, table);      		            	   
		               }
		              
		      }
		     
		} catch (Exception e) {
			// TODO: handle exception
		}
		  return tableList;
	}
	
	
}
